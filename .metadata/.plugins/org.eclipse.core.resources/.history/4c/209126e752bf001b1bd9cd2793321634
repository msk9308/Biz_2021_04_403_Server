package com.callor.todo.command;

import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.callor.todo.config.DBInfo;
import com.callor.todo.service.TodoService;
import com.callor.todo.service.impl.TodoServiceImplV1;

public class TodoCommandImplV1 implements TodoCommand {
	
	// Logger 객체인 log를 선언하고 생성을 할 때
	// 관리 이름으로 TODO를 부착하라 
	// TODO라는 이름으로 Logger를 싱글톤으로 제공하라 
	// Factory 패턴
	// 객체를 생성하는 클래스.method()를 준비해두고
	// 필요에따라 생성된 객체를 제공받는 패턴
	private static final Logger log = LoggerFactory.getLogger("TODO");
	
	private TodoService toService;
	
	public TodoCommandImplV1() {
		toService = new TodoServiceImplV1();
	}
	
	@Override
	public void execute(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {
		
		String td_doit = req.getParameter("td_doit");
		//Server APP에서 System.out.println() 대신
		//사용할 console 출력 method
		log.debug(td_doit);
		
		//Map으로 만든 동적(Dynamic)VO
		//Value를 Object로 만든 이유
		// table에서 데이터를 Select하거나,
		// 	 INSERT,UPDATE를 수행할 때
		//	 각 칼럼의 Data type이 문자열,숫자 등
		//	 다양한 Type으로 구성되어 있기 때문에
		//	 미리 어떤 Type으로 지정하기가 어려워
		//   Super parent Type인 Object 클래스 type으로
		//	 선언한다
		Map<String,Object> tdVO 
			= new HashMap<String, Object>();
		
		Date date 
		= new Date(System.currentTimeMillis());
		
		SimpleDateFormat sd 
		= new SimpleDateFormat("yyyy-MM-dd");
		SimpleDateFormat st 
		= new SimpleDateFormat("HH:mm:ss");
		
		String curDate = sd.format(date);
		String curTime = st.format(date);

		tdVO.put(DBInfo.td_sdate, curDate);
		tdVO.put(DBInfo.td_stime, curTime);
		tdVO.put(DBInfo.td_doit, td_doit);
		
		toService.insert(tdVO);
		
		// "/todo/"
		res.sendRedirect( req.getContextPath() );
		
	}
}